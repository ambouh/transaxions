{"version":3,"sources":["whitelogo.svg","auth.js","Login/index.js","Register/index.js","Dashboard/UserNavigation/index.js","Dashboard/Summary/index.js","Dashboard/AllTransactions/transactionForm.js","Dashboard/AllTransactions/transactionTbl.js","Dashboard/AllTransactions/index.js","Dashboard/index.js","protected.route.js","Logout/index.js","page404/index.js","WelcomeScreen/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","auth","Auth","Object","classCallCheck","this","development","authenticated","username","password","callback","_this","URL","axios","create","baseURL","get","then","response","data","user","getUser","status","PERSON_ID","USERNAME","AUTHENTICATED","localStorage","setItem","JSON","stringify","removeItem","i","length","Login","state","message","handleClick","event","preventDefault","login","props","history","push","setState","react_default","a","createElement","className","value","onClick","react_router_dom","style","textDecoration","to","Component","Register","title","UserNavigation","handleLogout","logout","logoutBtn","fontFamily","fontSize","color","cursor","width","withRouter","Summary","userTransaction","userData","getURL","parse","getItem","person_id","_this2","getPersonData","toString","getUserTransactions","top3","marginBottom","map","key","TransactionForm","merchant","amount","category","handleInputChange","target","type","checked","name","defineProperty","handleAddTrans","_this$state","handleTransactionView","handleTransactionForm","onChange","placeholder","TransactionTbl","AllTransactions","isTransactionOpen","isSubmitted","dataTrans","newTrans","obj","isNaN","TRANSACTION_MERCHANT","TRANSACTION_AMOUNT","TRANSACTION_CATEGORY","TRANSACTION_TYPE","slice","prevState","getPersonId","addTransView","transBtnTitle","transactionForm","transactionTbl","Dashboard","Dashboard_UserNavigation","react_router","exact","path","component","ProtectedRoute","_ref","rest","objectWithoutProperties","assign","render","isAuthenticated","pathname","from","location","Logout","logoutDiv","marginTop","marginLeft","index","WelcomeScreen","protected_route","page404","App","id","src","logo","alt","src_WelcomeScreen","Boolean","window","hostname","match","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ceac251.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whitelogo.157efa52.svg\";","import axios from 'axios';\r\n\r\nclass Auth {\r\n    constructor(){\r\n        this.authenticated = false;\r\n    }\r\n    development = 'http://localhost:3000/';\r\n\r\n    login(username, password, callback) {\r\n        //const requestOption = \"person_id=\"+ username + \"&password=\" + password;\r\n        const verb = '';\r\n        const URL = this.development;//this.getURL();\r\n        const ax = axios.create({\r\n            baseURL: URL\r\n        });\r\n        ax.get('person.json')\r\n            .then((response) =>{\r\n                const data = response.data;\r\n                const user = this.getUser(username, data);\r\n\r\n                if(user){\r\n                    const data = {\r\n                        \"PERSON_ID\": user.PERSON_ID,\r\n                        \"USERNAME\" : user.USERNAME,\r\n                        \"AUTHENTICATED\" : true\r\n                    };\r\n\r\n                    localStorage.setItem(\"user\", JSON.stringify(data));\r\n                    localStorage.setItem(\"person_id\", user.PERSON_ID);\r\n                    this.authenticated= true;\r\n                    let response = {\r\n                        status: \"SUCCESS\",\r\n                        data: {}\r\n                    };\r\n                    callback(response);\r\n                } else {\r\n                    let response = {\r\n                        status: \"FAIL\",\r\n                        data: {}\r\n                    };\r\n                    return callback(response);\r\n                }\r\n            });\r\n    }\r\n\r\n    logout(callback) {\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"person_id\");\r\n        this.authenticated = false;\r\n        callback();\r\n    }\r\n\r\n    isAuthenticated() {\r\n        return this.authenticated;\r\n    }\r\n\r\n\r\n    getUser(username, data){\r\n        for(let i=0; i < data.length; i++ ){\r\n            return (data[i].USERNAME === username)? data[i] : false ;\r\n        }\r\n    }\r\n\r\n    getURL() {\r\n        const production = \"https://ambouh.github.io/transaxions/\";\r\n        const development = 'http://localhost:3000/';\r\n        const localServer = \"http://localhost:60080/api\";\r\n        return production;\r\n    }\r\n\r\n}\r\n\r\nexport default new Auth();","import React, { Component} from 'react' ;\r\nimport './login.css';\r\nimport { Link } from 'react-router-dom';\r\nimport auth from '../auth';\r\n\r\nclass Login extends Component {\r\n    user = {\r\n        username: \"testuser\",\r\n        password: \"test\"\r\n    };\r\n\r\n    state ={\r\n       message: ''\r\n    };\r\n\r\n    handleClick = (event)=>{\r\n        event.preventDefault();\r\n        auth.login(this.user.username, this.user.password, (response)=>{\r\n            if (response.status === \"SUCCESS\") {\r\n                this.props.history.push('/dashboard')\r\n            } else {\r\n                this.setState({\r\n                    message: \"Unable to validate\"\r\n                    }\r\n                )\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className={\"welcomeScreen\"}>\r\n                <form>\r\n                    <p className={\"error\"}>{this.state.message}</p>\r\n                    <input value={this.user.username} />\r\n                    <input value={this.user.password} />\r\n                    <button className={\"button\"} onClick={this.handleClick}>Sign In</button>\r\n                    <Link style={{textDecoration: \"none\"}}to=\"/register\">\r\n                        <button className={\"button signUp\"}>Sign Up</button>\r\n                    </Link>\r\n                </form>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport './register.css';\r\n\r\nclass Register extends Component {\r\n    title = \"register\";\r\n    render() {\r\n        return (\r\n            <div className=\"templateDiv\">\r\n                <h1 className={\"templateTitle\"}>{this.title}</h1>\r\n                <p className={\"templateText\"}>This is the {this.title} template</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport './UserNavigation.css';\r\nimport {Link} from 'react-router-dom';\r\nimport Auth from '../../auth';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass UserNavigation extends Component {\r\n\r\n    handleLogout = (event) => {\r\n        event.preventDefault();\r\n        Auth.logout(()=>{this.props.history.push(\"/logout\")});\r\n    };\r\n    logoutBtn = {\r\n        textDecoration: \"none\",\r\n        fontFamily: \"Agency FB\",\r\n        fontSize: \"30px\",\r\n        color: \"#FFF\",\r\n        \"cursor\" : \"pointer\"\r\n    };\r\n    render() {\r\n        return(\r\n          <div className={\"navigation\"}>\r\n              <ul style={{width:\"220px\"}}>\r\n                  <li><Link to={\"/dashboard\"}>Dashboard</Link></li>\r\n                  <li><Link to={\"/dashboard/transactions\"}>All Transactions</Link></li>\r\n                  <li style={this.logoutBtn} onClick={this.handleLogout}>Logout</li>\r\n              </ul>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(UserNavigation);","import React, {Component} from 'react';\r\nimport './summary.css';\r\nimport axios from \"axios\";\r\nimport Auth from '../../auth';\r\n\r\nclass Summary extends Component {\r\n    title = \"Dashboard\";\r\n\r\n    state = {\r\n        userTransaction: [],\r\n        userData: []\r\n    };\r\n\r\n    getPersonData() {\r\n        const verb = '';\r\n        const URL = Auth.getURL();\r\n        const ax = axios.create({\r\n            baseURL: URL\r\n        });\r\n        return ax.get('person.json')\r\n            .then((response) => {\r\n                const data = response.data;\r\n                const obj = JSON.parse(localStorage.getItem(\"user\"));\r\n                const username = obj[\"USERNAME\"];\r\n\r\n                return Auth.getUser(username, data);\r\n            });\r\n    }\r\n\r\n    getUserTransactions(person_id) {\r\n        const verb = '';\r\n        const URL = Auth.getURL(); //http://localhost:60080/api/\r\n        const ax = axios.create({\r\n            baseURL: URL\r\n        });\r\n        return ax.get('transaction.json')\r\n            .then((response) => {\r\n                const data = response.data;\r\n                //const sessionStr = localStorage.getItem(\"user\");\r\n                //const id = JSON.parse(sessionStr).PERSON_ID;\r\n                //const hello = \"hey\"\r\n                //console.log(data[person_id]);\r\n                return data[person_id];\r\n\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        //const this.getPersonData();\r\n        this.getPersonData().then((response) => {\r\n            this.setState({userData: response})\r\n        });\r\n        const person_id = localStorage.getItem(\"person_id\").toString();\r\n        this.getUserTransactions(person_id).then((response) => {\r\n            const top3 = [];\r\n            for (let i = 0; i < 3; i++) {\r\n                top3.push(response[i]);\r\n            }\r\n            this.setState({userTransaction: top3});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"templateDiv\">\r\n                <h1 className={\"templateTitle\"} style={{marginBottom: 0}}>{this.title}</h1>\r\n                <div className={\"contentWrapper\"}>\r\n                    <div className={\"content\"}>\r\n                        <h1 className={\"templateTitle\"}>(3) RECENT TRANSACTIONS ></h1>\r\n                        <div className={\"box\"}>\r\n                            <ul className={\"recTransactions\"}>\r\n\r\n                                {this.state.userTransaction.map((data, i) => {\r\n                                        return (\r\n                                            <li className={\"transaction\"} key={i}>\r\n                                                <div>\r\n                                                    <p>{data[\"TRANSACTION_MERCHANT\"]}</p>\r\n                                                    <p>{data[\"TRANSACTION_TYPE\"]}</p>\r\n                                                </div>\r\n                                                <span>$ {data[\"TRANSACTION_AMOUNT\"]}</span>\r\n                                            </li>\r\n                                        )\r\n                                    }\r\n                                )\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"content\"}>\r\n                        <h1 className={\"templateTitle\"}>ACCOUNTS ></h1>\r\n                        <div className={\"box\"}>\r\n                            <ul className={\"recTransactions\"}>\r\n                                <li className={\"transaction\"}>\r\n                                    <div>\r\n                                        <p>CHECKING ACCOUNT #00{this.state.userData[\"PERSON_ID\"]}</p>\r\n                                        <p>VISA </p>\r\n                                    </div>\r\n                                    <span style={{color: \"#3E7BB8\"}}>${this.state.userData[\"CHECKING_BALANCE\"]}</span>\r\n                                </li>\r\n                                <li className={\"transaction\"}>\r\n                                    <div>\r\n                                        <p>SAVINGS ACCOUNT #00{this.state.userData[\"PERSON_ID\"]}</p>\r\n                                        <p>VISA </p>\r\n                                    </div>\r\n                                    <span style={{color: \"#3E7BB8\"}}>${this.state.userData[\"SAVINGS_BALANCE\"]}</span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Summary;","import React, { Component} from 'react';\r\n\r\n\r\nclass TransactionForm extends Component {\r\n    state = {\r\n        merchant: \"\",\r\n        amount: \"\",\r\n        category: \"\"\r\n    };\r\n\r\n    handleInputChange = (event) =>{\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n\r\n    handleAddTrans = (event)=>{\r\n        event.preventDefault();\r\n        const {merchant, amount, category} = this.state;\r\n        this.props.handleTransactionView(merchant, amount, category);\r\n        this.props.handleTransactionForm(event);\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form className={\"transactionForm\"}>\r\n                    <input value={this.state.merchant} onChange={this.handleInputChange} name={\"merchant\"} placeholder={\"enter merchant\"}/>\r\n                    <input value={this.state.amount}  onChange={this.handleInputChange} name={\"amount\"} placeholder={\"enter amount\"}/>\r\n                    <input value={this.state.category} onChange={this.handleInputChange} name={\"category\"} placeholder={\"enter category\"}/>\r\n                    <button className={\"button submit\"} onClick={this.handleAddTrans}>submit</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default  TransactionForm;","import React, {Component} from 'react';\r\n\r\n\r\nclass TransactionTbl extends Component {\r\n\r\n    render(){\r\n        const {userTransaction} = this.props;\r\n        return (\r\n            <table className={\"transactionTbl\"}>\r\n                <thead>\r\n                <tr>\r\n                    <th>TRANSACTION</th>\r\n                    <th>AMOUNT</th>\r\n                    <th>CATEGORY</th>\r\n                    <th>TYPE</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {userTransaction.map((data, i) => {\r\n                    return (\r\n                        <tr key={i}>\r\n                            <td>{data[\"TRANSACTION_MERCHANT\"]}</td>\r\n                            <td>$ {data[\"TRANSACTION_AMOUNT\"]}</td>\r\n                            <td>{data[\"TRANSACTION_CATEGORY\"]}</td>\r\n                            <td>{data[\"TRANSACTION_TYPE\"]}</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TransactionTbl;","import React, {Component} from 'react';\r\nimport './alltransactions.css';\r\nimport axios from \"axios\";\r\nimport Auth from \"../../auth\";\r\nimport TransactionForm from \"./transactionForm\";\r\nimport TransactionTbl from \"./transactionTbl\";\r\n\r\nclass AllTransactions extends Component {\r\n\r\n    state = {\r\n        userTransaction: [],\r\n        isTransactionOpen: false,\r\n        isSubmitted: false,\r\n        dataTrans: []\r\n    };\r\n\r\n    title = \"All Transactions\";\r\n\r\n\r\n    getPersonId() {\r\n        return localStorage.getItem(\"person_id\").toString();\r\n    }\r\n\r\n    getUserTransactions(person_id) {\r\n        const verb = '';\r\n        const URL = Auth.getURL();\r\n        const ax = axios.create({\r\n            baseURL: URL\r\n        });\r\n        return ax.get('transaction.json')\r\n            .then((response) =>{\r\n                const data = response.data;\r\n                //const sessionStr = localStorage.getItem(\"user\");\r\n                //const id = JSON.parse(sessionStr).PERSON_ID;\r\n                //console.log(data[person_id]);\r\n                return data[person_id];\r\n\r\n            });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const person_id = this.getPersonId();\r\n        this.getUserTransactions(person_id).then((response) => {\r\n            this.setState({userTransaction: response})\r\n        });\r\n    }\r\n\r\n    handleTransactionView = (merchant, amount, category) => {\r\n        let newTrans;\r\n        let obj ={};\r\n        if ((merchant!==\"\") &&(!isNaN(amount)) &&(category !==\"\")) {\r\n            obj={\r\n                \"TRANSACTION_MERCHANT\" : merchant,\r\n                \"TRANSACTION_AMOUNT\" : amount,\r\n                \"TRANSACTION_CATEGORY\" : category,\r\n                \"TRANSACTION_TYPE\" : \"WITHDRAWAL\"\r\n            };\r\n\r\n            newTrans = this.state.userTransaction.slice();\r\n            newTrans.push(obj);\r\n\r\n            this.setState({isSubmitted: true, userTransaction: newTrans});\r\n        }\r\n    };\r\n\r\n    handleTransactionForm = (event) => {\r\n        event.preventDefault();\r\n        this.setState(prevState => ({\r\n            isTransactionOpen: !prevState.isTransactionOpen\r\n        }));\r\n\r\n        if (this.state.isSubmitted) {\r\n            this.setState({isSubmitted: false});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {isTransactionOpen, userTransaction, isSubmitted} = this.state;\r\n        let addTransView = null;\r\n        let transBtnTitle = \"add a transaction\";\r\n\r\n        if (isTransactionOpen) {\r\n            addTransView = (<TransactionForm handleTransactionView={this.handleTransactionView}\r\n                                         handleTransactionForm={this.handleTransactionForm}/>);\r\n            transBtnTitle = \"close form\";\r\n        }\r\n\r\n        if (isSubmitted) {\r\n            transBtnTitle = \"add another transaction\";\r\n            addTransView = (\r\n                <div>\r\n                    <h1 className={\"templateTitle\"}>SUCCESS!</h1>\r\n                    <p className={\"templateText\"}>Transaction was added successfully! Thanks.</p>\r\n                </div>\r\n\r\n            );\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"templateDiv\">\r\n                <h1 className={\"templateTitle\"}>{this.title}</h1>\r\n                <TransactionTbl userTransaction={userTransaction}/>\r\n                <div className={\"addTransDiv\"}>\r\n                    <button className={\"addTransBtn\"} onClick={this.handleTransactionForm}> {transBtnTitle} </button>\r\n                    <div>{addTransView}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllTransactions;","import React, { Component } from 'react';\r\nimport './dashboard.css';\r\nimport UserNavigation from \"./UserNavigation\";\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport Summary from \"./Summary\";\r\nimport AllTransactions from \"./AllTransactions\";\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n    title = \"dashboard\";\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"wrapper\"}>\r\n                <UserNavigation/>\r\n                <Switch>\r\n                    <Route exact path={\"/dashboard\"} component={Summary}/>\r\n                    <Route exact path={\"/dashboard/transactions\"} component={AllTransactions}/>\r\n                </Switch>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"./auth\";\r\n\r\n\r\nconst ProtectedRoute = ({\r\n                                   component: Component,\r\n                                   ...rest\r\n                               }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                if (auth.isAuthenticated()) {\r\n                    return <Component {...props} />;\r\n                } else {\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/\",\r\n                                state: {\r\n                                    from: props.location,\r\n                                }\r\n\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;","import React, { Component } from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\n\r\nclass Logout extends Component {\r\n    title = \"Log Out\";\r\n    logoutDiv = {marginTop: \"20px\", marginLeft: \"70px\"};\r\n    render() {\r\n        return (\r\n            <div className=\"templateDiv\" style={this.logoutDiv}>\r\n                <h1 className={\"templateTitle\"}>{this.title}</h1>\r\n                <p className={\"templateText\"}>You have logged out successfully! Good bye.</p>\r\n\r\n                <Link to={\"/\"} className={\"forBtn\"}> Return home > </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Logout);","import React, { Component } from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\n\r\nclass index extends Component {\r\n    title = \"Page 404\";\r\n    logoutDiv = {marginTop: \"20px\", marginLeft: \"70px\"};\r\n    render() {\r\n        return (\r\n            <div className=\"templateDiv\" style={this.logoutDiv}>\r\n                <h1 className={\"templateTitle\"}>{this.title}</h1>\r\n                <p className={\"templateText\"}>You're lost buddy. Go on, return home.</p>\r\n\r\n                <Link to={\"/\"} className={\"forBtn\"}> Return home > </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(index);","import React, { Component } from 'react';\r\nimport './welcomeScreen.css';\r\nimport Login from '../Login';\r\nimport Register from '../Register';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Dashboard from \"../Dashboard\";\r\nimport ProtectedRoute from '../protected.route';\r\nimport Logout from \"../Logout\";\r\nimport page404 from \"../page404\";\r\n\r\nclass WelcomeScreen extends Component {\r\n    render() {\r\n        return (\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Login}/>\r\n                    <Route exact path=\"/register\" component={Register}/>\r\n                    <ProtectedRoute path=\"/dashboard\" component={Dashboard}/>\r\n                    <Route exact path=\"/logout\" component={Logout}/>\r\n                    <Route path=\"*\" component={page404}/>\r\n                </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WelcomeScreen;","import React, { Component } from 'react';\nimport './App.css';\nimport logo from './whitelogo.svg';\nimport WelcomeScreen from './WelcomeScreen/';\n\n\n\nclass App extends Component {\n    render() {\n    return (\n        <div id=\"container\">\n            <div className=\"upperDiv\">\n                <img src={logo} className=\"logo\" alt=\"Transaxions Logo\" />\n            </div>\n            <div className=\"midDiv\">\n                <WelcomeScreen/>\n            </div>\n            <div className=\"bottomDiv\">\n                <p>Copyright 2019 Transaxions | World's Greatest Ledger App</p>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom'\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nrender((\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n        <App/>\n    </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}