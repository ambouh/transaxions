{"version":3,"sources":["whitelogo.svg","auth.js","Login/index.js","Register/index.js","Dashboard/UserNavigation/index.js","Dashboard/Summary/index.js","Dashboard/AllTransactions/index.js","Dashboard/index.js","protected.route.js","WelcomeScreen/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","auth","Auth","Object","classCallCheck","this","authenticated","username","password","callback","_this","axios","create","baseURL","get","then","response","data","user","getUser","status","PERSON_ID","USERNAME","AUTHENTICATED","localStorage","setItem","JSON","stringify","removeItem","i","length","Login","state","message","handleClick","event","preventDefault","login","console","log","props","history","push","setState","react_default","a","createElement","className","value","onClick","react_router_dom","to","Component","Register","title","UserNavigation","Summary","userTransaction","userData","parse","getItem","person_id","_this2","getPersonData","toString","getUserTransactions","top3","style","marginBottom","map","key","color","AllTransactions","getPersonId","Dashboard","Dashboard_UserNavigation","react_router","exact","path","component","ProtectedRoute","_ref","rest","objectWithoutProperties","assign","render","isAuthenticated","pathname","from","location","WelcomeScreen","protected_route","App","id","src","logo","alt","src_WelcomeScreen","Boolean","window","hostname","match","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8bc445c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whitelogo.157efa52.svg\";","import axios from 'axios';\r\n\r\nclass Auth {\r\n    constructor(){\r\n        this.authenticated = false;\r\n    }\r\n\r\n    login(username, password, callback) {\r\n        //const requestOption = \"person_id=\"+ username + \"&password=\" + password;\r\n        const verb = '';\r\n        const URL = ''; //'http://localhost:3000/'+ verb; //http://localhost:60080/api/\r\n        const ax = axios.create({\r\n            baseURL: URL\r\n        });\r\n        ax.get('person.json')\r\n            .then((response) =>{\r\n                const data = response.data;\r\n                const user = this.getUser(username, data);\r\n\r\n                if(user){\r\n                    const data = {\r\n                        \"PERSON_ID\": user.PERSON_ID,\r\n                        \"USERNAME\" : user.USERNAME,\r\n                        \"AUTHENTICATED\" : true\r\n                    };\r\n\r\n                    localStorage.setItem(\"user\", JSON.stringify(data));\r\n                    localStorage.setItem(\"person_id\", user.PERSON_ID);\r\n                    this.authenticated= true;\r\n                    let response = {\r\n                        status: \"SUCCESS\",\r\n                        data: {}\r\n                    };\r\n                    callback(response);\r\n                } else {\r\n                    let response = {\r\n                        status: \"FAIL\",\r\n                        data: {}\r\n                    };\r\n                    return callback(response);\r\n                }\r\n            });\r\n    }\r\n\r\n    logout(callback) {\r\n        localStorage.removeItem(\"user\");\r\n        callback();\r\n    }\r\n\r\n    isAuthenticated() {\r\n        return this.authenticated;\r\n    }\r\n\r\n\r\n    getUser(username, data){\r\n        for(let i=0; i < data.length; i++ ){\r\n            return (data[i].USERNAME === username)? data[i] : false ;\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Auth();","import React, { Component} from 'react' ;\r\nimport './login.css';\r\nimport { Link } from 'react-router-dom';\r\nimport auth from '../auth';\r\n\r\nclass Login extends Component {\r\n    user = {\r\n        username: \"testuser\",\r\n        password: \"test\"\r\n    };\r\n\r\n    state ={\r\n       message: ''\r\n    };\r\n\r\n    handleClick = (event)=>{\r\n        event.preventDefault();\r\n        auth.login(this.user.username, this.user.password, (response)=>{\r\n            console.log(\"RESPONSE\", response);\r\n            if (response.status === \"SUCCESS\") {\r\n                this.props.history.push('/dashboard')\r\n            } else {\r\n                this.setState({\r\n                    message: \"Unable to validate\"\r\n                    }\r\n                )\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className={\"welcomeScreen\"}>\r\n                <form>\r\n                    <p className={\"error\"}>{this.state.message}</p>\r\n                    <input value={this.user.username} />\r\n                    <input value={this.user.password} />\r\n                    <button className={\"button\"} onClick={this.handleClick}>Sign In</button>\r\n                    <Link to=\"/register\">\r\n                        <button className={\"button signUp\"}>Sign Up</button>\r\n                    </Link>\r\n                </form>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport './register.css';\r\n\r\nclass Register extends Component {\r\n    title = \"register\";\r\n    render() {\r\n        return (\r\n            <div className=\"templateDiv\">\r\n                <h1 className={\"templateTitle\"}>{this.title}</h1>\r\n                <p className={\"templateText\"}>This is the {this.title} template</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport './UserNavigation.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass UserNavigation extends Component {\r\n    render() {\r\n        return(\r\n          <div className={\"navigation\"}>\r\n              <ul>\r\n                  <li><Link to={\"/dashboard\"}>Dashboard</Link></li>\r\n                  <li><Link to={\"/dashboard/transactions\"}>All Transactions</Link></li>\r\n              </ul>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserNavigation;","import React, {Component} from 'react';\r\nimport './summary.css';\r\nimport axios from \"axios\";\r\nimport Auth from '../../auth';\r\n\r\nclass Summary extends Component {\r\n    title = \"Dashboard\";\r\n\r\n    state = {\r\n        userTransaction: [],\r\n        userData: []\r\n    };\r\n\r\n    getPersonData() {\r\n        const verb = '';\r\n        const URL = 'http://localhost:3000/' + verb; //http://localhost:60080/api/\r\n        const ax = axios.create({\r\n            baseURL: URL\r\n        });\r\n        return ax.get('person.json')\r\n            .then((response) => {\r\n                const data = response.data;\r\n                const obj = JSON.parse(localStorage.getItem(\"user\"));\r\n                const username = obj[\"USERNAME\"];\r\n\r\n                return Auth.getUser(username, data);\r\n            });\r\n    }\r\n\r\n    getUserTransactions(person_id) {\r\n        const verb = '';\r\n        const URL = ''; //'http://localhost:3000/' + verb; //http://localhost:60080/api/\r\n        const ax = axios.create({\r\n            baseURL: URL\r\n        });\r\n        return ax.get('transaction.json')\r\n            .then((response) => {\r\n                const data = response.data;\r\n                //const sessionStr = localStorage.getItem(\"user\");\r\n                //const id = JSON.parse(sessionStr).PERSON_ID;\r\n                //const hello = \"hey\"\r\n                //console.log(data[person_id]);\r\n                return data[person_id];\r\n\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        //const this.getPersonData();\r\n        this.getPersonData().then((response) => {\r\n            this.setState({userData: response})\r\n        });\r\n        const person_id = localStorage.getItem(\"person_id\").toString();\r\n        this.getUserTransactions(person_id).then((response) => {\r\n            const top3 = [];\r\n            for (let i = 0; i < 3; i++) {\r\n                top3.push(response[i]);\r\n            }\r\n            this.setState({userTransaction: top3});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"templateDiv\">\r\n                <h1 className={\"templateTitle\"} style={{marginBottom: 0}}>{this.title}</h1>\r\n                <div className={\"contentWrapper\"}>\r\n                    <div className={\"content\"}>\r\n                        <h1 className={\"templateTitle\"}>RECENT TRANSACTIONS ></h1>\r\n                        <div className={\"box\"}>\r\n                            <ul className={\"recTransactions\"}>\r\n\r\n                                {this.state.userTransaction.map((data, i) => {\r\n                                        return (\r\n                                            <li className={\"transaction\"} key={i}>\r\n                                                <div>\r\n                                                    <p>{data[\"TRANSACTION_MERCHANT\"]}</p>\r\n                                                    <p>{data[\"TRANSACTION_TYPE\"]}</p>\r\n                                                </div>\r\n                                                <span>$ {data[\"TRANSACTION_AMOUNT\"]}</span>\r\n                                            </li>\r\n                                        )\r\n                                    }\r\n                                )\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"content\"}>\r\n                        <h1 className={\"templateTitle\"}>ACCOUNTS ></h1>\r\n                        <div className={\"box\"}>\r\n                            <ul className={\"recTransactions\"}>\r\n                                <li className={\"transaction\"}>\r\n                                    <div>\r\n                                        <p>CHECKING ACCOUNT #00{this.state.userData[\"PERSON_ID\"]}</p>\r\n                                        <p>VISA </p>\r\n                                    </div>\r\n                                    <span style={{color: \"#3E7BB8\"}}>${this.state.userData[\"CHECKING_BALANCE\"]}</span>\r\n                                </li>\r\n                                <li className={\"transaction\"}>\r\n                                    <div>\r\n                                        <p>SAVINGS ACCOUNT #00{this.state.userData[\"PERSON_ID\"]}</p>\r\n                                        <p>VISA </p>\r\n                                    </div>\r\n                                    <span style={{color: \"#3E7BB8\"}}>${this.state.userData[\"SAVINGS_BALANCE\"]}</span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Summary;","import React, { Component} from 'react';\r\nimport './alltransactions.css';\r\nimport axios from \"axios\";\r\n\r\nclass AllTransactions extends Component {\r\n\r\n    state = {\r\n        userTransaction: []\r\n    };\r\n\r\n\r\n    getPersonId(){\r\n        return localStorage.getItem(\"person_id\").toString();\r\n    }\r\n\r\n    getUserTransactions(person_id){\r\n        const verb = '';\r\n        const URL =''; //'http://localhost:3000/'+ verb //http://localhost:60080/api/\r\n        const ax = axios.create({\r\n            baseURL: URL\r\n        });\r\n        return ax.get('transaction.json')\r\n            .then((response) =>{\r\n                const data = response.data;\r\n                //const sessionStr = localStorage.getItem(\"user\");\r\n                //const id = JSON.parse(sessionStr).PERSON_ID;\r\n                //const hello = \"hey\"\r\n                //console.log(data[person_id]);\r\n                return data[person_id];\r\n\r\n            });\r\n    }\r\n        componentDidMount() {\r\n        const person_id = this.getPersonId();\r\n        this.getUserTransactions(person_id).then((response)=>{\r\n            this.setState({userTransaction: response})\r\n        });\r\n    }\r\n\r\n    title = \"All Transactions\";\r\n    render() {\r\n        return (\r\n            <div className=\"templateDiv\">\r\n                <h1 className={\"templateTitle\"}>{this.title}</h1>\r\n                <table className={\"transactionTbl\"}>\r\n                    <tr>\r\n                        <th>TRANSACTION</th>\r\n                        <th>AMOUNT</th>\r\n                        <th>CATEGORY</th>\r\n                        <th>TYPE</th>\r\n                    </tr>\r\n                    <tbody>\r\n                    {this.state.userTransaction.map((data, i) => {\r\n                        return (\r\n                            <tr key={i}>\r\n                                <td>{data[\"TRANSACTION_MERCHANT\"]}</td>\r\n                                <td>$ {data[\"TRANSACTION_AMOUNT\"]}</td>\r\n                                <td>{data[\"TRANSACTION_CATEGORY\"]}</td>\r\n                                <td>{data[\"TRANSACTION_TYPE\"]}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllTransactions;","import React, { Component } from 'react';\r\nimport './dashboard.css';\r\nimport UserNavigation from \"./UserNavigation\";\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport Summary from \"./Summary\";\r\nimport AllTransactions from \"./AllTransactions\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n    title = \"dashboard\";\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"wrapper\"}>\r\n                <UserNavigation/>\r\n                <Switch>\r\n                    <Route exact path={\"/dashboard\"} component={Summary}/>\r\n                    <Route exact path={\"/dashboard/transactions\"} component={AllTransactions}/>\r\n                </Switch>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"./auth\";\r\n\r\n\r\nconst ProtectedRoute = ({\r\n                                   component: Component,\r\n                                   ...rest\r\n                               }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                if (auth.isAuthenticated()) {\r\n                    return <Component {...props} />;\r\n                } else {\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/\",\r\n                                state: {\r\n                                    from: props.location,\r\n                                }\r\n\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;","import React, { Component } from 'react';\r\nimport './welcomeScreen.css';\r\nimport Login from '../Login';\r\nimport Register from '../Register';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Dashboard from \"../Dashboard\";\r\nimport ProtectedRoute from '../protected.route';\r\n\r\nclass WelcomeScreen extends Component {\r\n    render() {\r\n        return (\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Login}/>\r\n                    <Route path=\"/register\" component={Register}/>\r\n                    <ProtectedRoute path=\"/dashboard\" component={Dashboard}/>\r\n                </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WelcomeScreen;","import React, { Component } from 'react';\nimport './App.css';\nimport logo from './whitelogo.svg';\nimport WelcomeScreen from './WelcomeScreen/';\n\n\n\nclass App extends Component {\n    render() {\n    return (\n        <div id=\"container\">\n            <div className=\"upperDiv\">\n                <img src={logo} className=\"logo\" alt=\"Transaxions Logo\" />\n            </div>\n            <div className=\"midDiv\">\n                <WelcomeScreen/>\n            </div>\n            <div className=\"bottomDiv\">\n                <p>Copyright 2019 Transaxions | World's Greatest Ledger App</p>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom'\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nrender((\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n        <App/>\n    </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}